---
interface Props {
  image: {
    [key: string]: string
  },
  lazy?: boolean,
  fixedSize?: number
}
import { Image } from "astro:assets";
import { getImageUrl } from "@src/pocketbase";
const { image, lazy, fixedSize } = Astro.props;
console.log(image)
---

{
  image && (
    fixedSize ? (
            <Image
      src={getImageUrl({
        collection: image,
        filename: image?.image,
      })}
      widths={[Number(fixedSize)]}
      sizes={`${fixedSize}px`}
      inferSize
      alt={image?.alt}
      title={image?.title}
      loading={lazy ? "lazy" : "eager"}
      decoding={lazy ? "async" : "sync"}
      fetchpriority={lazy ? "low" : "high"}
      class="hero-image"
      />
    ) : (

      <Image
      src={getImageUrl({
        collection: image,
        filename: image?.image,
      })}
      widths={[240, 400, 1000]}
      sizes={`(max-width: 360px) 240px, (max-width: 500px) 400px, 1000px`}
      inferSize
      alt={image?.alt}
      title={image?.title}
      loading={lazy ? "lazy" : "eager"}
      decoding={lazy ? "async" : "sync"}
      fetchpriority={lazy ? "low" : "high"}
      class="hero-image"
      />
    )
  )
}
